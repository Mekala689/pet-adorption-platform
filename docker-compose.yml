version: '3.8'

services:
  # MongoDB Database
  mongodb:
    image: mongo:6.0
    container_name: pet_adoption_mongodb
    restart: unless-stopped
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_ROOT_USERNAME:-admin}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_ROOT_PASSWORD:-password123}
      MONGO_INITDB_DATABASE: ${MONGO_DB_NAME:-pet_adoption_db}
    volumes:
      - mongodb_data:/data/db
      - ./mongo-init.js:/docker-entrypoint-initdb.d/mongo-init.js:ro
    ports:
      - "27017:27017"
    networks:
      - pet_adoption_network

  # Redis for caching and sessions
  redis:
    image: redis:7-alpine
    container_name: pet_adoption_redis
    restart: unless-stopped
    volumes:
      - redis_data:/data
    ports:
      - "6379:6379"
    networks:
      - pet_adoption_network

  # Django Backend
  backend:
    build: .
    container_name: pet_adoption_backend
    restart: unless-stopped
    environment:
      - DEBUG=${DEBUG:-False}
      - SECRET_KEY=${SECRET_KEY:-your-secret-key-here}
      - DB_NAME=${MONGO_DB_NAME:-pet_adoption_db}
      - DB_HOST=mongodb://mongodb:27017
      - DB_USER=${MONGO_ROOT_USERNAME:-admin}
      - DB_PASSWORD=${MONGO_ROOT_PASSWORD:-password123}
      - REDIS_URL=redis://redis:6379/0
      - ALLOWED_HOSTS=${ALLOWED_HOSTS:-localhost,127.0.0.1}
      - AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID}
      - AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY}
      - AWS_STORAGE_BUCKET_NAME=${AWS_STORAGE_BUCKET_NAME}
      - AWS_S3_REGION_NAME=${AWS_S3_REGION_NAME:-us-east-1}
      - EMAIL_HOST=${EMAIL_HOST}
      - EMAIL_PORT=${EMAIL_PORT:-587}
      - EMAIL_HOST_USER=${EMAIL_HOST_USER}
      - EMAIL_HOST_PASSWORD=${EMAIL_HOST_PASSWORD}
    volumes:
      - static_volume:/app/staticfiles
      - media_volume:/app/media
    ports:
      - "8000:8000"
    depends_on:
      - mongodb
      - redis
    networks:
      - pet_adoption_network

  # Nginx Reverse Proxy
  nginx:
    image: nginx:alpine
    container_name: pet_adoption_nginx
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - static_volume:/app/staticfiles
      - media_volume:/app/media
      - ./ssl:/etc/nginx/ssl:ro
    depends_on:
      - backend
    networks:
      - pet_adoption_network

  # Celery Worker for background tasks
  celery:
    build: .
    container_name: pet_adoption_celery
    restart: unless-stopped
    command: celery -A pet_adoption worker -l info
    environment:
      - DEBUG=${DEBUG:-False}
      - SECRET_KEY=${SECRET_KEY:-your-secret-key-here}
      - DB_NAME=${MONGO_DB_NAME:-pet_adoption_db}
      - DB_HOST=mongodb://mongodb:27017
      - DB_USER=${MONGO_ROOT_USERNAME:-admin}
      - DB_PASSWORD=${MONGO_ROOT_PASSWORD:-password123}
      - REDIS_URL=redis://redis:6379/0
    volumes:
      - media_volume:/app/media
    depends_on:
      - mongodb
      - redis
    networks:
      - pet_adoption_network

  # Celery Beat for scheduled tasks
  celery-beat:
    build: .
    container_name: pet_adoption_celery_beat
    restart: unless-stopped
    command: celery -A pet_adoption beat -l info
    environment:
      - DEBUG=${DEBUG:-False}
      - SECRET_KEY=${SECRET_KEY:-your-secret-key-here}
      - DB_NAME=${MONGO_DB_NAME:-pet_adoption_db}
      - DB_HOST=mongodb://mongodb:27017
      - DB_USER=${MONGO_ROOT_USERNAME:-admin}
      - DB_PASSWORD=${MONGO_ROOT_PASSWORD:-password123}
      - REDIS_URL=redis://redis:6379/0
    depends_on:
      - mongodb
      - redis
    networks:
      - pet_adoption_network

volumes:
  mongodb_data:
  redis_data:
  static_volume:
  media_volume:

networks:
  pet_adoption_network:
    driver: bridge
